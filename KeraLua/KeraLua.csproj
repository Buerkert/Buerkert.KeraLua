<!--<Project Sdk="Microsoft.NET.Sdk" InitialTargets="DisplayMessages">-->
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetFramework>net8.0</TargetFramework>
        <AssemblyTitle>Buerkert.KeraLua</AssemblyTitle>
        <Product>Buerkert.KeraLua</Product>
        <Company>Buerkert Werke GmbH &amp; Co. KG</Company>
        <Authors>NLua;Burkert</Authors>
        <Copyright>
            original Copyright © Vinicius Jarina 2019
            modified by Copyright (c) Buerkert Fluid Control Systems 2023
        </Copyright>
        <VersionPrefix>1.6.0</VersionPrefix>
        <VersionSuffix>branch</VersionSuffix>
    </PropertyGroup>
    <PropertyGroup>
        <PackageId>Buerkert.KeraLua</PackageId>
        <Description>C# Native bindings of Lua 5.2</Description>
        <PackageProjectUrl>https://github.com/Buerkert/Buerkert.KeraLua</PackageProjectUrl>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <RepositoryType>git</RepositoryType>
        <PackageIcon>KeraLua.png</PackageIcon>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
        <PackageTags>lua keralua</PackageTags>
        <DebugType>embedded</DebugType> <!-- Embedd debug into the dll itself because github packages does not provide a symbol server -->
        <!--        <IncludeSymbols>true</IncludeSymbols>-->
        <!--        <SymbolPackageFormat>snupkg</SymbolPackageFormat>-->
    </PropertyGroup>
    <PropertyGroup Condition="'$(GITHUB_ACTIONS)' == 'true'">
        <ContinuousIntegrationBuild>true</ContinuousIntegrationBuild>
    </PropertyGroup>
    <PropertyGroup>
        <DefineConstants>USE_DYNAMIC_DLL_REGISTER</DefineConstants>
        <OutputRuntimeDir>runtimes</OutputRuntimeDir>
    </PropertyGroup>

    <!--we could compile lua from the submodule but with multiple target frameworks the same bin would be compiled multiple times what is nonesense-->
    <!--<Import Project="BuildLua.Windows.targets"/>-->
    <!--<Import Project="BuildLua.Linux.targets"/>-->

    <ItemGroup Label="PackageFiles">
        <None Include="$(OutputRuntimeDir)\**" Pack="true" PackagePath="runtimes" />
        <None Include="..\README.md" Pack="true" PackagePath="" />
        <None Include="..\LICENSE.md" Pack="true" PackagePath="" />
        <None Include="..\KeraLua.png" Pack="true" PackagePath="" />
    </ItemGroup>
    <!--  for projects referencing this project directly-->
    <PropertyGroup>
        <IsLinux>False</IsLinux>
        <IsWindows>False</IsWindows>
    </PropertyGroup>
    <PropertyGroup Condition="'$(RuntimeIdentifier)'!=''">
        <IsLinux>$(RuntimeIdentifier.StartsWith('linux'))</IsLinux>
        <IsWindows>$(RuntimeIdentifier.StartsWith('win'))</IsWindows>
    </PropertyGroup>
    <PropertyGroup Condition="'$(RuntimeIdentifier)'==''">
        <!-- use build environment as default -->
        <IsLinux Condition="$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))">True</IsLinux>
        <IsWindows Condition="$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Windows)))">True</IsWindows>
    </PropertyGroup>
    <ItemGroup>
        <None Condition="$(IsLinux)" Include="$(OutputRuntimeDir)\linux*\**" CopyToOutputDirectory="PreserveNewest" />
        <None Condition="$(IsWindows)" Include="$(OutputRuntimeDir)\win*\**" CopyToOutputDirectory="PreserveNewest" />
    </ItemGroup>
    <!--    <Target Name="DisplayMessages">-->
    <!--        <Message Text="|| MSBuildProjectName '$(MSBuildProjectName)'" Importance="high"/>-->
    <!--        <Message Text="|| RuntimeIdentifier '$(RuntimeIdentifier)'" Importance="high"/>-->
    <!--        <Message Text="|| IsLinux '$(IsLinux)'" Importance="high"/>-->
    <!--        <Message Text="|| IsWindows '$(IsWindows)'" Importance="high"/>-->
    <!--    </Target>-->
</Project>
